import numpy as np

# Задаем размерности n
n_values = []
for i in range(10, 101, 10):
    n_values.append(i)

# Задаем количество тестовых примеров
N = 100

# Задаем коэффициент регуляризации
alpha = 0.1

# Генерируем тестовые данные для каждой размерности n
for n in n_values:
    # Генерируем матрицу признаков X размера (N, n)
    X = np.random.rand(N, n)
    # Генерируем вектор меток Y размера (N, )
    Y = np.random.randint(0, 2, N)
    # Создаем единичный столбец в матрице X для учета свободного члена
    X = np.hstack((np.ones((N, 1)), X))
    # Инициализируем веса W
    W = np.zeros(n + 1)
    # Обучаем модель логистической регрессии с регуляризацией
    for i in range(100):
        # Вычисляем предсказания модели
        y_pred = 1 / (1 + np.exp(-np.dot(X, W)))
        # Вычисляем градиент функции потерь
        grad = np.dot(X.T, (y_pred - Y)) + alpha * W
        # Обновляем веса
        W -= 0.01 * grad
    # Выводим результаты
    print(f"Размерность вектора переменных: {n}")
    print(f"Тестовые данные:\n{X}")
    print(f"Метки классов:\n{Y}")
    print(f"Веса модели:\n{W}")
